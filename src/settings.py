"""
Django settings for domochat project.

Generated by 'django-admin startproject' using Django 1.11.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import yaml

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# Допустимо указать прямой путь к локальным настройкам в формате YAML через
# переменную окружения 'DOMOCHAT_CONF_PATH'.
# Если переменная пуста, для работы используется конфиг по относительному пути.
_ENV = 'DOMOCHAT_CONF_PATH'
CONF_PATH = os.getenv(_ENV)
if not CONF_PATH:
    CONF_PATH = '../config/domochat.yaml'
CONF_PATH = os.path.normpath(CONF_PATH)

conf = yaml.load(open(CONF_PATH))

DEBUG = conf['DEBUG']

ALLOWED_HOSTS = conf['ALLOWED_HOSTS']

SITE_ID = conf['SITE_ID']

SECRET_KEY = conf['SECRET_KEY']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.domochat',
    'apps.domochat_bot',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': conf['DATABASES']['default']['ENGINE'],
        'NAME': conf['DATABASES']['default']['NAME'],
        'USER': conf['DATABASES']['default']['USER'],
        'PASSWORD': conf['DATABASES']['default']['PASSWORD'],
        'HOST': conf['DATABASES']['default']['HOST'],
        'PORT': conf['DATABASES']['default']['PORT']
    }
}

EMAIL_HOST = conf['EMAIL_HOST']
EMAIL_FROM = conf['EMAIL_FROM']
EMAIL_HOST_USER = conf['EMAIL_HOST_USER']
DEFAULT_FROM_EMAIL = conf['DEFAULT_FROM_EMAIL']
EMAIL_HOST_PASSWORD = conf['EMAIL_HOST_PASSWORD']
EMAIL_USE_TLS = conf['EMAIL_USE_TLS']
EMAIL_PORT = conf['EMAIL_PORT']

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

TELEGRAM_BOT_TOKEN = conf['TELEGRAM']['TOKEN']
